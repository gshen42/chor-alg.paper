@misc{bauer-2019,
      title={What is algebraic about algebraic effects and handlers?},
      author={Andrej Bauer},
      year={2019},
      eprint={1807.05923},
      archivePrefix={arXiv},
      primaryClass={cs.LO}
}

@article{cruzfilipe-2020,
    title = {A core model for choreographic programming},
    journal = {Theoretical Computer Science},
    volume = {802},
    pages = {38-66},
    year = {2020},
    issn = {0304-3975},
    doi = {https://doi.org/10.1016/j.tcs.2019.07.005},
    url = {https://www.sciencedirect.com/science/article/pii/S0304397519304311},
    author = {Luís Cruz-Filipe and Fabrizio Montesi},
}

@inproceedings{cruzfilipe-2022,
    author = {Cruz-Filipe, Lu\'{\i}s and Graversen, Eva and Lugovi\'{c}, Lovro and Montesi, Fabrizio and Peressotti, Marco},
    title = {Functional Choreographic Programming},
    year = {2022},
    isbn = {978-3-031-17714-9},
    publisher = {Springer-Verlag},
    address = {Berlin, Heidelberg},
    url = {https://doi.org/10.1007/978-3-031-17715-6_15},
    doi = {10.1007/978-3-031-17715-6_15},
    booktitle = {Theoretical Aspects of Computing – ICTAC 2022: 19th International Colloquium, Tbilisi, Georgia, September 27–29, 2022, Proceedings},
    pages = {212–237},
    numpages = {26},
    location = {Tbilisi, Georgia}
}

@inproceedings{cruzfillipe-2023,
    author = {Cruz-Filipe, Lu\'{\i}s and Lugovi\'{c}, Lovro and Montesi, Fabrizio},
    title = {Certified Compilation of Choreographies with hacc},
    year = {2023},
    isbn = {978-3-031-35354-3},
    publisher = {Springer-Verlag},
    address = {Berlin, Heidelberg},
    url = {https://doi.org/10.1007/978-3-031-35355-0_3},
    doi = {10.1007/978-3-031-35355-0_3},
    booktitle = {Formal Techniques for Distributed Objects, Components, and Systems: 43rd IFIP WG 6.1 International Conference, FORTE 2023, Held as Part of the 18th International Federated Conference on Distributed Computing Techniques, DisCoTec 2023, Lisbon, Portugal, June 19–23, 2023, Proceedings},
    pages = {29–36},
    numpages = {8},
    location = {Lisbon, Portugal}
}

@article{giallorenzo-2024,
    author = {Giallorenzo, Saverio and Montesi, Fabrizio and Peressotti, Marco},
    title = {Choral: Object-oriented Choreographic Programming},
    year = {2024},
    issue_date = {March 2024},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
    volume = {46},
    number = {1},
    issn = {0164-0925},
    url = {https://doi.org/10.1145/3632398},
    doi = {10.1145/3632398},
    journal = {ACM Trans. Program. Lang. Syst.},
    month = jan,
    articleno = {1},
    numpages = {59}
}

@article{hirsch-2022,
    author = {Hirsch, Andrew K. and Garg, Deepak},
    title = {Pirouette: Higher-Order Typed Functional Choreographies},
    year = {2022},
    issue_date = {January 2022},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
    volume = {6},
    number = {POPL},
    url = {https://doi.org/10.1145/3498684},
    doi = {10.1145/3498684},
    month = jan,
    articleno = {23},
    numpages = {27}
}

@misc{kashiwa-2023,
    title={Portable, Efficient, and Practical Library-Level Choreographic Programming},
    author={Shun Kashiwa and Gan Shen and Soroush Zare and Lindsey Kuper},
    year={2023},
    eprint={2311.11472},
    archivePrefix={arXiv},
    primaryClass={cs.PL}
}

@article{kidney-2023,
    author = {Kidney, Donnacha Ois\'{\i}n and Yang, Zhixuan and Wu, Nicolas},
    title = {Algebraic Effects Meet Hoare Logic in Cubical Agda},
    year = {2024},
    issue_date = {January 2024},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
    volume = {8},
    number = {POPL},
    url = {https://doi.org/10.1145/3632898},
    doi = {10.1145/3632898},
    journal = {Proc. ACM Program. Lang.},
    month = {jan},
    articleno = {56},
    numpages = {33}
}

@article{lugovic-2023,
   title={Real-World Choreographic Programming: Full-Duplex Asynchrony and Interoperability},
   volume={8},
   ISSN={2473-7321},
   url={http://dx.doi.org/10.22152/programming-journal.org/2024/8/8},
   DOI={10.22152/programming-journal.org/2024/8/8},
   number={2},
   journal={The Art, Science, and Engineering of Programming},
   publisher={Aspect-Oriented Software Association (AOSA)},
   author={Lugović, Lovro and Montesi, Fabrizio},
   year={2023},
   month=oct
}

@phdthesis{montesi-2013,
    author  = "Fabrizio Montesi",
    title   = "Choreographic Programming",
    school  = "IT University of Copenhagen",
    year    = "2013",
    url     = "https://www.fabriziomontesi.com/files/choreographic-programming.pdf"
}

@book{montesi-2023,
    place={Cambridge},
    title={Introduction to Choreographies},
    DOI={10.1017/9781108981491},
    publisher={Cambridge University Press},
    author={Montesi, Fabrizio},
    year={2023}
}

@article{plotkin-2003,
  title={Algebraic operations and generic effects},
  author={Plotkin, Gordon and Power, John},
  journal={Applied categorical structures},
  volume={11},
  pages={69--94},
  year={2003},
  publisher={Springer},
  doi={10.1023/A:1023064908962}
}

@article{plotkin-2013,
   title={Handling Algebraic Effects},
   volume={Volume 9, Issue 4},
   ISSN={1860-5974},
   url={http://dx.doi.org/10.2168/LMCS-9(4:23)2013},
   DOI={10.2168/lmcs-9(4:23)2013},
   journal={Logical Methods in Computer Science},
   publisher={Centre pour la Communication Scientifique Directe (CCSD)},
   author={Plotkin, Gordon D and Pretnar, Matija},
   year={2013},
   month=dec
}

@InProceedings{pohjola-2022,
    author = {Pohjola, Johannes \r{A}man and G\'{o}mez-Londo\~{n}o, Alejandro and Shaker, James and Norrish, Michael},
    title = {{Kalas: A Verified, End-To-End Compiler for a Choreographic Language}},
    booktitle =	{13th International Conference on Interactive Theorem Proving (ITP 2022)},
    pages = {27:1--27:18},
    series = {Leibniz International Proceedings in Informatics (LIPIcs)},
    ISBN = {978-3-95977-252-5},
    ISSN = {1868-8969},
    year = {2022},
    volume = {237},
    editor = {Andronick, June and de Moura, Leonardo},
    publisher =	{Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik},
    address = {Dagstuhl, Germany},
    URL = {https://drops-dev.dagstuhl.de/entities/document/10.4230/LIPIcs.ITP.2022.27},
    URN = {urn:nbn:de:0030-drops-167368},
    doi = {10.4230/LIPIcs.ITP.2022.27},
}

@article{shen-2023,
    author = {Shen, Gan and Kashiwa, Shun and Kuper, Lindsey},
    title = {HasChor: Functional Choreographic Programming for All (Functional Pearl)},
    year = {2023},
    issue_date = {August 2023},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
    volume = {7},
    number = {ICFP},
    url = {https://doi.org/10.1145/3607849},
    doi = {10.1145/3607849},
    month = aug,
    articleno = {207},
    numpages = {25}
}



@Article{chandrasekaran_et_al:DagRep.8.4.104,
  author =	{Chandrasekaran, Sivaramakrishnan Krishnamoorthy and Leijen, Daan and Pretnar, Matija and Schrijvers, Tom},
  title =	{{Algebraic Effect Handlers go Mainstream (Dagstuhl Seminar 18172)}},
  pages =	{104--125},
  journal =	{Dagstuhl Reports},
  ISSN =	{2192-5283},
  year =	{2018},
  volume =	{8},
  number =	{4},
  editor =	{Chandrasekaran, Sivaramakrishnan Krishnamoorthy and Leijen, Daan and Pretnar, Matija and Schrijvers, Tom},
  publisher =	{Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik},
  address =	{Dagstuhl, Germany},
  URL =		{https://drops-dev.dagstuhl.de/entities/document/10.4230/DagRep.8.4.104},
  URN =		{urn:nbn:de:0030-drops-97623},
  doi =		{10.4230/DagRep.8.4.104},
  annote =	{Keywords: algebraic effect handlers, implementation techniques, programming abstractions, programming languages}
}

@Article{dagstuhl-alg-effects-report,
  author =	{Sivaramakrishnan, KC and Leijen, Daan and Pretnar, Matija and Schrijvers, Tom},
  title =	{{Algebraic Effect Handlers go Mainstream (Dagstuhl Seminar 18172)}},
  pages =	{104--125},
  journal =	{Dagstuhl Reports},
  ISSN =	{2192-5283},
  year =	{2018},
  volume =	{8},
  number =	{4},
  editor =	{Chandrasekaran, Sivaramakrishnan Krishnamoorthy and Leijen, Daan and Pretnar, Matija and Schrijvers, Tom},
  publisher =	{Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik},
  address =	{Dagstuhl, Germany},
  URL =		{https://drops-dev.dagstuhl.de/entities/document/10.4230/DagRep.8.4.104},
  URN =		{urn:nbn:de:0030-drops-97623},
  doi =		{10.4230/DagRep.8.4.104},
  annote =	{Keywords: algebraic effect handlers, implementation techniques, programming abstractions, programming languages}
}

@inproceedings{sivaramakrishnan-ocaml-effect-handlers,
author = {Sivaramakrishnan, KC and Dolan, Stephen and White, Leo and Kelly, Tom and Jaffer, Sadiq and Madhavapeddy, Anil},
title = {Retrofitting effect handlers onto OCaml},
year = {2021},
isbn = {9781450383912},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3453483.3454039},
doi = {10.1145/3453483.3454039},
abstract = {Effect handlers have been gathering momentum as a mechanism for modular programming with user-defined effects. Effect handlers allow for non-local control flow mechanisms such as generators, async/await, lightweight threads and coroutines to be composably expressed. We present a design and evaluate a full-fledged efficient implementation of effect handlers for OCaml, an industrial-strength multi-paradigm programming language. Our implementation strives to maintain the backwards compatibility and performance profile of existing OCaml code. Retrofitting effect handlers onto OCaml is challenging since OCaml does not currently have any non-local control flow mechanisms other than exceptions. Our implementation of effect handlers for OCaml: (i) imposes a mean 1\% overhead on a comprehensive macro benchmark suite that does not use effect handlers; (ii) remains compatible with program analysis tools that inspect the stack; and (iii) is efficient for new code that makes use of effect handlers.},
booktitle = {Proceedings of the 42nd ACM SIGPLAN International Conference on Programming Language Design and Implementation},
pages = {206–221},
numpages = {16},
keywords = {Fibers, Effect handlers, Continuations, Backwards compatibility, Backtraces},
location = {Virtual, Canada},
series = {PLDI 2021}
}

@article{hudak-edsls,
author = {Hudak, Paul},
title = {Building Domain-Specific Embedded Languages},
year = {1996},
issue_date = {Dec. 1996},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {28},
number = {4es},
issn = {0360-0300},
url = {https://doi.org/10.1145/242224.242477},
doi = {10.1145/242224.242477},
journal = {ACM Comput. Surv.},
month = {dec},
pages = {196–es}
}

@article{leijen-2017, author = {Leijen, Daan}, title = {Type directed compilation of row-typed algebraic effects}, year = {2017}, issue_date = {January 2017}, publisher = {Association for Computing Machinery}, address = {New York, NY, USA}, volume = {52}, number = {1}, issn = {0362-1340}, url = {https://doi.org/10.1145/3093333.3009872}, doi = {10.1145/3093333.3009872}, abstract = {Algebraic effect handlers, introduced by Plotkin and Power in 2002, are recently gaining in popularity as a purely functional approach to modeling effects. In this article, we give a full overview of practical algebraic effects in the context of a compiled implementation in the Koka language. In particular, we show how algebraic effects generalize over common constructs like exception handling, state, iterators and async-await. We give an effective type inference algorithm based on extensible effect rows using scoped labels, and a direct operational semantics. Finally, we show an efficient compilation scheme to common runtime platforms (like JavaScript) using a type directed selective CPS translation.}, journal = {SIGPLAN Not.}, month = {jan}, pages = {486–499}, numpages = {14}, keywords = {Type Inference, CPS transformation, Algebraic Effect Handlers} }
  

